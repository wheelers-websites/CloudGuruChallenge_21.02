{
    "$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion":"1.0.0.0",
    "outputs":{
        
    },
    "parameters":{
        "location":{
            "type":"string"
        },
        "locationName":{
            "type":"string"
        },
        "name":{
            "type":"string"
        },
        "project":{
            "type":"string"
        },
        "storageAccountName":{
            "type":"string"
        },
        "subscriptionId":{
            "type":"string"
        },
        "workerSize":{
            "type":"string"
        }
    },
    "resources":[
        {
            "apiVersion":"2020-04-01",
            "kind":"GlobalDocumentDB",
            "location":"[parameters('location')]",
            "name":"[parameters('name')]",
            "properties":{
                "backupPolicy":{
                    "type":"Periodic",
                    "periodicModeProperties":{
                        "backupIntervalInMinutes":240,
                        "backupRetentionIntervalInHours":8
                    }
                },
                "capabilities":[
                    
                ],
                "databaseAccountOfferType":"Standard",
                "dependsOn":[
                    
                ],
                "enableFreeTier":true,
                "enableMultipleWriteLocations":false,
                "ipRules":[
                    
                ],
                "isVirtualNetworkFilterEnabled":false,
                "locations":[
                    {
                        "id":"[concat(parameters('name'), '-', parameters('location'))]",
                        "failoverPriority":0,
                        "locationName":"[parameters('locationName')]"
                    }
                ],
                "virtualNetworkRules":[
                    
                ]
            },
            "tags":{
                "CosmosAccountType":"Non-Production",
                "Name":"[parameters('name')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.DocumentDb/databaseAccounts"
        },
        {
            "apiVersion":"2020-04-01",
            "dependsOn":[
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
            ],
            "name":"[concat(parameters('name'), '/default')]",
            "properties":{
                
            },
            "type":"Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces"
        },
        {
            "apiVersion":"2020-07-01",
            "location":"global",
            "name":"[parameters('name')]",
            "properties":{
                "backendPools":[
                    {
                        "name":"backend",
                        "properties":{
                            "backends":[
                                {
                                    "address":"[concat(parameters('name'), '.azurewebsites.net')]",
                                    "backendHostHeader":"[concat(parameters('name'), '.azurewebsites.net')]",
                                    "enabledState":"Enabled",
                                    "httpPort":80,
                                    "httpsPort":443,
                                    "priority":1,
                                    "weight":50
                                }
                            ],
                            "healthProbeSettings":{
                                "id":"[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('name'), 'healthcheck')]"
                            },
                            "loadBalancingSettings":{
                                "id":"[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('name'), 'loadbalancing')]"
                            }
                        }
                    }
                ],
                "enabledState":"Enabled",
                "frontendEndpoints":[
                    {
                        "name":"frontend",
                        "properties":{
                            "hostName":"[concat(parameters('name'), '.azurefd.net')]",
                            "sessionAffinityEnabledState":"Disabled"
                        }
                    }
                ],
                "healthProbeSettings":[
                    {
                        "name":"healthcheck",
                        "properties":{
                            "intervalInSeconds":120,
                            "path":"/",
                            "protocol":"Https"
                        }
                    }
                ],
                "loadBalancingSettings":[
                    {
                        "name":"loadbalancing",
                        "properties":{
                            "sampleSize":4,
                            "successfulSamplesRequired":2
                        }
                    }
                ],
                "routingRules":[
                    {
                        "name":"http",
                        "properties":{
                            "acceptedProtocols":[
                                "Http"
                            ],
                            "enabledState":"Enabled",
                            "frontendEndpoints":[
                                {
                                    "id":"[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('name'), 'frontend')]"
                                }
                            ],
                            "patternsToMatch":[
                                "/*"
                            ],
                            "routeConfiguration":{
                                "@odata.type":"#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                                "redirectProtocol":"HttpsOnly",
                                "redirectType":"Moved"
                            }
                        }
                    },
                    {
                        "name":"routingRule1",
                        "properties":{
                            "acceptedProtocols":[
                                "Https"
                            ],
                            "enabledState":"Enabled",
                            "frontendEndpoints":[
                                {
                                    "id":"[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('name'), 'frontend')]"
                                }
                            ],
                            "patternsToMatch":[
                                "/*"
                            ],
                            "routeConfiguration":{
                                "@odata.type":"#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "backendPool":{
                                    "id":"[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('name'), 'backend')]"
                                },
                                "forwardingProtocol":"MatchRequest"
                            }
                        }
                    }
                ]
            },
            "type":"Microsoft.Network/frontDoors"
        },
        {
            "apiVersion":"2019-09-01",
            "dependsOn":[
                
            ],
            "location":"[parameters('location')]",
            "name":"[parameters('name')]",
            "properties":{
                "addressSpace":{
                    "addressPrefixes":[
                        "10.0.0.0/20"
                    ]
                },
                "enableDdosProtection":false,
                "subnets":[
                    {
                        "name":"public-1",
                        "properties":{
                            "addressPrefix":"10.0.0.0/24",
                            "delegations":[
                                {
                                    "name":"delegation",
                                    "properties":{
                                        "serviceName":"Microsoft.Web/serverFarms"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name":"public-2",
                        "properties":{
                            "addressPrefix":"10.0.1.0/24"
                        }
                    },
                    {
                        "name":"private-1",
                        "properties":{
                            "addressPrefix":"10.0.15.0/24"
                        }
                    },
                    {
                        "name":"private-2",
                        "properties":{
                            "addressPrefix":"10.0.14.0/24"
                        }
                    }
                ]
            },
            "tags":{
                "Name":"[parameters('name')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Network/VirtualNetworks"
        },
        {
            "apiVersion":"2019-06-01",
            "dependsOn":[
                
            ],
            "kind":"StorageV2",
            "location":"[parameters('location')]",
            "name":"[parameters('storageAccountName')]",
            "properties":{
                "accessTier":"Hot",
                "allowBlobPublicAccess":false,
                "allowSharedKeyAccess":true,
                "minimumTlsVersion":"TLS1_2",
                "networkAcls":{
                    "bypass":"AzureServices",
                    "defaultAction":"Allow",
                    "ipRules":[
                        
                    ]
                },
                "supportsHttpsTrafficOnly":true
            },
            "sku":{
                "name":"Standard_LRS"
            },
            "tags":{
                "Name":"[parameters('name')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion":"2018-11-01",
            "dependsOn":[
                
            ],
            "kind":"linux",
            "location":"[parameters('locationName')]",
            "name":"[parameters('name')]",
            "properties":{
                "name":"[parameters('name')]",
                "reserved":true,
                "workerSize":"[parameters('workerSize')]"
            },
            "sku":{
                "Tier":"Standard",
                "Name":"S1"
            },
            "tags":{
                "Name":"[parameters('name')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Web/serverfarms"
        },
        {
            "apiVersion":"2018-11-01",
            "dependsOn":[
                "[concat('Microsoft.Network/VirtualNetworks/', parameters('name'))]",
                "[concat('Microsoft.Web/serverfarms/', parameters('name'))]"
            ],
            "location":"[parameters('locationName')]",
            "name":"[parameters('name')]",
            "properties":{
                "clientAffinityEnabled":false,
                "name":"[parameters('name')]",
                "serverFarmId":"[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('project'), '/providers/Microsoft.Web/serverfarms/', parameters('name'))]",
                "siteConfig":{
                    "alwaysOn":true,
                    "ipSecurityRestrictions":[
                        {
                            "action":"Allow",
                            "priority":"1",
							"tag": "AzureFrontDoor.Backend"
                        }
                    ],
                    "linuxFxVersion":"RUBY|2.6",
                    "numberOfWorkers":"3"
                },
                "vnetName":"[parameters('name')]"
            },
            "resources":[
                {
                    "apiVersion":"2019-08-01",
                    "dependsOn":[
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                    ],
                    "name":"virtualNetwork",
                    "properties":{
                        "subnetResourceId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('name'), 'public-1')]",
                        "swiftSupported":true
                    },
                    "type":"config"
                }
            ],
            "tags":{
                "Name":"[parameters('name')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Web/sites"
        }
    ],
    "variables":{
        
    }
}